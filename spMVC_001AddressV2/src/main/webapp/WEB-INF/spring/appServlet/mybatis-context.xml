<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- dataSource : DBMS 에 연결한 통로를 만들어 줄 객체 BasicDataSource ds = new BasicDataSource() 
		를 xml에서 표현한 방식 ds.setDriverClassName(""); ds.setUrl(""); ds.setUsername(""); 
		ds.setPassword(""); -->
	<bean id="ds" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="addr" />
		<property name="password" value="12341234" />
	</bean>

	<bean id="mySQL_DS" class="org.apache.commons.dbcp2.BasicDataSource">
	<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
	<property name="url" value="jdbc:mysql://localhost:3306/addressDB"/>
	<property name="username" value="root"/>
	<property name="password" value="!Biz8080"/>
	
	</bean>
	
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mySQL_DS"></property>
		<property name="typeAliasesPackage"
			value="com.hee462.address.models"></property>
		<property name="mapperLocations" value="/WEB-INF/spring/mapper/*-mapper.xml"></property>
	</bean>
	<!-- 아래 코드에서 System.in을 constructor argument라고 한다 Scanner scan = new Scanner(System.in); 
		SqlSessionTemplate sqlSessionTemplate = new SqlSessionTemplate(sqlSessionFactory); -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<!-- tansactionManager 객체와 연계하여 Annotaion 방식으로 transaction을 관리하도록 설정하겠다 
	만약 transactionManager의  id가 transactionManager 일 경우
	transaction-manager = "transactionManager"속성은 생략 가능
	-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- DBMS와 연계하여 Transaction을 자동화 시킬 객체 -->
	<bean id="transactionManager" class ="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="mySQL_DS"/>
	</bean>
	<!-- mybatis야 dao page 에있는 interface를 scan하여 @Select,@Insert,@Update , @Delete등이 
		있으면 SQL을 만들어라 -->
	<mybatis-spring:scan base-package="com.hee462.address.dao" />




</beans>
